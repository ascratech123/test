= stylesheet_link_tag "css/edm_time"
.save_button.mdl-card.agendaheight
  = form_for [:admin, @event, @campaign, @edm],:html => {:class =>'form-horizontal'}, :builder => CustomFormBuilder do |f|
    -if params[:next].present?
      .mdl-grid.mdl-shadow--1dp
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border.p-t-10
            General Information
        - if @fields.present?
          .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8.m-t-15
            .form-group
              %label.col-lg-4.control-label.ml-color--shades-white
                Choose Field
              .col-lg-7
                - default_grouping = @fields.collect{|p| [ p[1], p[0] ]}
                %i.arrow.single
                = f.select("edm", "database_email_field", default_grouping, {:selected => f.object.database_email_field,:prompt => "#{(f.object.database_email_field.present?) ? f.object.database_email_field : "Select Email field" }"}, {include_blank: 'None',:class=> 'select2-single form-control'})
                / .field_with_errors
                /   .span{:class => "errorMessage"}
                /     = f.object.errors.messages[:database_email_field].join("") rescue nil
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.m-b-5.errorMess
          .mdl-grid.p-v-5.form-group.mobiappstype
            .col-lg-4.mdl-typography--text-right 
              %p.displayInlineBlock.multicitytxt  Send to
            .col-lg-7.p-h-12.notific 
              = f.custom_radio_button :group_type, "all", "All", :id => "group_type_all_option"
              = f.custom_radio_button :group_type, "group", "Group", :id => "group_type_group_option"
        .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8.m-t-15{:style => "display: #{(f.object.group_type.present? and f.object.group_type == "group") ? "" : "none"}"}
          .form-group
            %label.col-lg-4.control-label.ml-color--shades-white
              Assign Grouping
            .col-lg-7
              - default_grouping = @event.groupings.collect{|p| [ p.name, p.id ]}
              %i.arrow.single
              = f.select("edm", "group_id", default_grouping, {:selected => f.object.group_id,:prompt => "#{(f.object.group_id.present?) ? f.object.group_id : "Select Group" }"}, {include_blank: 'None',:class=> 'select2-single form-control'})
              .field_with_errors
                .span{:class => "errorMessage"}
                  = f.object.errors.messages[:group_id].join("") rescue nil
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .mdl-grid.p-v-5
            .col-lg-4.mdl-typography--text-right
              %p.displayInlineBlock.multicitytxt eDM Broadcast Time
            .col-lg-3.p-h-12   
              = f.custom_radio_button_menu :edm_broadcast_value, "now","Now", :id => "edm_broadcast_time_now", :default_checked => (f.object.edm_broadcast_value == 'now' or f.object.edm_broadcast_time.blank?) ? 'checked' : ''
              = f.custom_radio_button_menu :edm_broadcast_value, "scheduled","Schedule", :id => "edm_broadcast_time_scheduled", :default_checked => (f.object.edm_broadcast_value == 'scheduled') ? 'checked' : ''
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.Regiserror{:style => "display: #{(f.object.edm_broadcast_time == 'scheduled') ? "" : "none"}"}
          .bs-component.m-t-30
            .form-group
              %label.col-lg-4.control-label{:for => "Start EDM Date"} Schedule Date
              = f.custom_text_field_date :start_date_time, "Start EDM Date", :id => "date-start",:value => f.object.edm_broadcast_time.present? ? f.object.edm_broadcast_time.to_time.in_time_zone('Kolkata').strftime('%d/%m/%Y') : ''
              .col-lg-3.timeDropdown
                .timeTab
                  = f.custom_text_field_date :start_time_hour, " ", :class => "hours inputs is-focused", :placeholder => 'HH ', :value => "#{get_hour_minute_second_ampm(f.object.edm_broadcast_time, 'hour')}", :col => '2',:maxlength => "2"
                  = f.custom_text_field_date :start_time_minute, " ", :class => "minutes inputs is-focused", :placeholder => 'MM ', :value => "#{get_hour_minute_second_ampm(f.object.edm_broadcast_time, 'minute')}", :col => '2',:maxlength => "2"
                  = f.custom_text_field_date :start_time_am, " ", :class => "ampm inputs is-focused", :placeholder => 'AM/PM', :value => "#{get_hour_minute_second_ampm(f.object.edm_broadcast_time, 'ampm')}", :col => '3',:maxlength => "2"  
                  = f.hidden_field_tag :broadcast_date, "true"
      .fixed-activon-btn-new  
        = f.custom_submit_button "SEND"
        .mdl-button.mdl-js-button.mdl-button--raised.mdl-js-ripple-effect.btnsubmit.m-l-18.cancelBg
          .mdl-cell--12-col.mdl-cell--12-col-tablet.cancelbtn.registcancel
            = link_to admin_event_campaign_edms_path(:event_id => @event.id,:campaign_id => @edm.campaign_id),:class => "waves-effect waves-light btn" do
              Cancel 
    -else
      .mdl-grid.mdl-shadow--1dp
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border.p-t-10
            General Information
        = f.custom_text_field :subject_line, "Subject Line","background" => "false" 
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .mdl-grid.p-v-5.m-b-10
            .col-lg-4.mdl-typography--text-right
              %p.displayInlineBlock.multicitytxt Template Type *
            .col-lg-7.p-h-12   
              = f.custom_radio_button_menu :template_type, "default_template","Default Template", :id => "default_template_for_edm", :default_checked => (f.object.template_type == 'default_template' or f.object.template_type.blank?) ? 'checked' : ''
              = f.custom_radio_button_menu :template_type, "custom_template","Custom Template", :id => "custom_template_for_edm", :default_checked => (f.object.template_type == 'custom_template') ? 'checked' : ''
        .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8
          .form-group
            %label.col-lg-4.control-label.ml-color--shades-white
              Select template
              %br
              %a{:href => '/whats_this/edm/template1.jpg', :class =>'fancybox', :rel=> "edm_view_template", :title => "Template"}
                (View Available Templates)
            = render :partial => "admin/layouts/whats_this_popup", :locals => {:image_name => {"Template2" => "template2.jpg","Template3" => "template3.jpg"}, :section_id => "edm_view_template",:path => "edm"}
            .col-lg-7  
              %i.arrow.single
              = f.select("edm", "default_template", ['Template 1','Template 2','Template 3'], {:selected => f.object.default_template,:prompt => 'Select template Type'},{:class=> 'select2-single form-control',:id=> "edm_templ_select"})
              .field_with_errors
                .span{:class => "errorMessage"}
                  = f.object.errors.messages[:default_template].join("") rescue nil
        / = f.new_custom_file_browser_field :header_image, "Header Image", :id => "header_image_uploadBtn", :value => f.object.header_image_file_name, :action=> params[:action], "background" => "false"
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.allcp-form.m-8
          .bs-component
            .form-group
              .span.col-lg-4
                = f.label "Header Image",:class =>"control-label", style: "float: right;"
              .col-lg-7
                %label.field.file
                  %span.button.btn-primary
                    Choose File 
                  = f.file_field :header_image,:id => "header_image_uploadBtn", :class=>"gui-file"
                  = text_field_tag("text_file_name","", id: "1header_image_uploadBtn", class: "gui-input", :value => "#{f.object.header_image_file_name.nil? ? "there is no Attachment Available !" : f.object.header_image_file_name}", :read_only => true)
              .span.col-lg-1
                = link_to("?" ,"/whats_this/app_info/master_screens/AppInfo_LoginScreenBackgroundddd.png", rel: "", title: "Header Image", :class =>"fancybox whatsImg")

        = f.custom_text_area_field :body,"Body text", "background" => "false"
        
        / = f.new_custom_file_browser_field :footer_image, "Footer Image", :id => "footer_image_uploadBtn", :value => f.object.footer_image_file_name, :action=> params[:action], "background" => "false"
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.allcp-form.m-8
          .bs-component
            .form-group
              .span.col-lg-4
                = f.label "Footer Image",:class =>"control-label", style: "float: right;"
              .col-lg-7
                %label.field.file
                  %span.button.btn-primary
                    Choose File 
                  = f.file_field :footer_image,:id => "footer_image_uploadBtn", :class=>"gui-file"
                  = text_field_tag("text_file_name","", id: "1footer_image_uploadBtn", class: "gui-input", :value => "#{f.object.footer_image_file_name.nil? ? "there is no Attachment Available !" : f.object.footer_image_file_name}", :read_only => true)
              .span.col-lg-1
                = link_to("?" ,"/whats_this/app_info/master_screens/AppInfo_LoginScreenBackgroundddd.png", rel: "", title: "Footer Image", :class =>"fancybox whatsImg")

        .edm_ckeditor
          .ckeditor_custom{:style => "display: #{(f.object.template_type == 'custom_template') ? "" : "none"}"}
            = f.label "Custom Template *"
            = f.cktext_area :custom_code
      .fixed-activon-btn-new  
        = f.custom_submit_button "SAVE"
        .mdl-button.mdl-js-button.mdl-button--raised.mdl-js-ripple-effect.btnsubmit.m-l-18.cancelBg
          .mdl-cell--12-col.mdl-cell--12-col-tablet.cancelbtn
            = back_button(:back)
        = f.custom_submit_button "NEXT"

- if @edm.template_type.present? and @edm.template_type == "custom_template"
  :javascript
    $("#header_image_uploadBtn").parent().parent().parent().parent().hide();
    $("#footer_image_uploadBtn").parent().parent().parent().parent().hide();
    $("#body_sample5").parent().parent().parent().hide();
    $("#edm_templ_select").parent().parent().parent().hide();
- if @edm.edm_broadcast_value.present? and @edm.edm_broadcast_value == "scheduled"
  :javascript
    $("#date-start").parent().parent().parent().parent().show();