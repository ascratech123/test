.overlayBg
  / %img{:src => "/assets/loader.gif", :class =>"loader-img"}/
  .spinner
    .rect1
    .rect2
    .rect3
    .rect4
    .rect5
.save_button.mdl-card.eventExceedLimit.eventFeaturesTransparent
  = form_for [:admin, @client, @event], :html => {:class =>'form-horizontal'}, :builder => CustomFormBuilder do |f|
    - if true #params[:type] == "general" or (params["controller"] == "admin/events" and params["action"] == "create")
      .mdl-grid.mdl-card.mdl-shadow--1dp
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border.p-t-10.m-b-15
            General Information
            / %a{:href => '/whats_this/event/general_information/event_generalInfo.jpg', :class =>'helpTag testhelp fancybox'}
            /   what's this?
        = #render :partial => "admin/layouts/whats_this_popup", :locals => {:image_name => "event_generalInfo.jpg", :section_id => "event_general_section"}
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .bs-component
            .form-group
              .col-lg-4 
              .col-lg-7
                = f.hidden_field_tag :event_limit
                .field_with_errors
                  .span{:class => "errorMessage"}
                    = f.object.errors.messages[:event_limit].join("") rescue nil
        - if not f.object.errors.messages[:event_limit].present?
          .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
            .bs-component
              .form-group
                .col-lg-4 
                .col-lg-7
                  = f.hidden_field_tag :event_date_limit
                  .field_with_errors
                    .span{:class => "errorMessage"}
                      = f.object.errors.messages[:event_date_limit].join("") rescue nil
        = f.custom_text_field :event_name, "Event Name *"
        =# f.custom_text_field :event_code, "Event Code"
        - marketing_app = params[:marketing_app] || @event.marketing_app 
        - if f.object.new_record? and params[:mobile_application_id].present?
          = f.hidden_field :mobile_application_id, :value => "#{params[:mobile_application_id].to_i rescue nil}"
        - if false
          .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8  
            .form-group.set_highlight_select
              %label.col-lg-4.control-label.ml-color--shades-white
                Select List
              .col-lg-7
                = f.select("event", "login_at", ["After Highlight", "Before Interaction"], {:selected => f.object.login_at, :prompt => 'Mobile Login At *'}, {include_blank: 'None',:class=> 'select2-single form-control' })
                .field_with_errors
                  .span{:class => "errorMessage"}
                    = f.object.errors.messages[:login_at].join("") rescue nil
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .bs-component
            .form-group.timeZoneP-l-0
              %label.col-lg-4.control-label{:for => "_Event Start Date"}="#{marketing_app.present? ? "Start Date" : "Start Date *"}"
              = f.custom_text_field_date :start_event_date, "Event Start Date", :id => "date-start", :value => f.object.start_event_date.present? ? f.object.start_event_date.strftime('%d/%m/%Y') : ''
              .col-lg-3.timeDropdown
                .timeTab
                  = f.custom_text_field_date :start_time_hour, " ", :class => "hours inputs is-focused", :placeholder => 'HH ', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365,368,333].include? f.object.id) ? (f.object.start_event_time.strftime('%l').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.start_event_time, 'hour'))}", :col => '2',:maxlength => "2"
                  
                  = f.custom_text_field_date :start_time_minute, " ", :class => "minutes inputs is-focused", :placeholder => 'MM ', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365, 368, 333].include? f.object.id) ? (f.object.start_event_time.strftime('%M').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.start_event_time, 'minute'))}", :col => '2',:maxlength => "2"
                  = f.custom_text_field_date :start_time_am, " ", :class => "ampm inputs is-focused", :placeholder => 'AM/PM', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365, 368, 333].include? f.object.id) ? (f.object.start_event_time.strftime('%p').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.start_event_time, 'ampm'))}", :col => '3',:maxlength => "2"       
        / = f.custom_text_field :start_event_date, "Event Start Date", :id => "date-start", :value => f.object.start_event_date.present? ? f.object.start_event_date.strftime('%d/%m/%Y') : '', :col => '8'
        / .timeDropdown
        /   .timeTab  
        /     = f.custom_text_fieldTime :start_time_hour, " ", :class => "hours inputs is-focused", :placeholder => 'HH ', :value => "#{f.object.start_event_time.strftime('%l').strip.rjust(2, '0') rescue nil}", :col => '2',:maxlength => "2"
        /     = f.custom_text_fieldTime :start_time_minute, " ", :class => "minutes inputs is-focused", :placeholder => 'MM ', :value => "#{f.object.start_event_time.strftime('%M').strip.rjust(2, '0') rescue nil}", :col => '2',:maxlength => "2"
        /     = f.custom_text_fieldTime :start_time_am, " ", :class => "ampm inputs is-focused", :placeholder => 'AM/PM', :value => "#{f.object.start_event_time.strftime('%p') rescue nil}", :col => '3',:maxlength => "2"
        / = f.custom_text_field :hours, :value => f.object.get_hours, :class => 'hours inputs', :placeholder=>"HH",:col => '2'
        / \:
        / = f.custom_text_field :minutes, :value => f.object.get_minutes, :class => 'minutes inputs', :placeholder=>"MM", :col => '2'
        / \:
        / = f.custom_text_field :ampm, :value => f.object.get_ampm, :class => 'ampm inputs', :placeholder=>"AM/PM",:col => '2'
        / = f.hidden_field :plugin_start_time, :class => 'plugin_start_time'
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .bs-component
            .form-group.timeZoneP-l-0
              %label.col-lg-4.control-label{:for => "_Event End Date"}="#{marketing_app.present? ? "End Date" : "End Date *"}"
              = f.custom_text_field_date :end_event_date, "Event End Date", :id => "date-end", :value => f.object.end_event_date.present? ? f.object.end_event_date.strftime('%d/%m/%Y') : ''
              .col-lg-3.timeDropdown
                .timeTab  
                  = f.custom_text_field_date :end_time_hour, " ", :class => "hours inputs", :placeholder => 'HH ', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365, 368, 333].include? f.object.id) ? (f.object.end_event_time.strftime('%l').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.end_event_time, 'hour'))}", :col => '2',:maxlength => "2"
                  = f.custom_text_field_date :end_time_minute, " ", :class => "minutes inputs", :placeholder => 'MM ', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365, 368, 333].include? f.object.id) ? (f.object.end_event_time.strftime('%M').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.end_event_time, 'minute'))}", :col => '2',:maxlength => "2"
                  = f.custom_text_field_date :end_time_am, " ", :class => "ampm inputs", :placeholder => 'AM/PM', :value => "#{([345, 360, 367, 173, 165, 168, 364, 365, 368, 333].include? f.object.id) ? (f.object.end_event_time.strftime('%p').strip.rjust(2, '0') rescue nil) : (get_hour_minute_second_ampm(f.object.end_event_time, 'ampm'))}", :col => '3',:maxlength => "2"
        = f.custom_text_field :cities, "City *"
        .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8  
          .form-group.set_highlight_select
            %label.col-lg-4.control-label.ml-color--shades-white
              Country *
            .col-lg-7
              = f.select :event, :country_name, Event::COUNTRIES,{:prompt => "Please select the country" ,:selected => (@event.country_name)}, {:class => 'select2-single form-control'}
              - if @event.errors.present? and @event.errors[:country_name].present?
                .field_with_errors
                  %span.errorMessage{:for => "event_country_name"} This field is required.
        .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8  
          .form-group.set_highlight_select
            %label.col-lg-4.control-label.ml-color--shades-white
              Time Zone *
            .col-lg-7
              - if @event.start_event_time.present?
                - @zones = ActiveSupport::TimeZone.all.uniq{|e| ["GMT#{e.at(@event.start_event_time).formatted_offset}"]}
                = f.select :event, :timezone, @zones.map{|e| ["GMT#{e.at(@event.start_event_time).formatted_offset}", e.name]}.sort,{:prompt => "Please select the Time Zone" ,:selected => (@event.timezone)}, {:class => 'select2-single form-control'}
                - if @event.errors.present? and @event.errors[:timezone].present?
                  .field_with_errors
                    %span.errorMessage{:for => "event_timezone"} This field is required.  
              - else
                - @zones = ActiveSupport::TimeZone.all.uniq{|e| ["GMT#{e.now.formatted_offset}"]}
                = f.select :event, :timezone, @zones.map{|e| ["GMT#{e.now.formatted_offset}", e.name]}.sort,{:prompt => "Please select the Time Zone" ,:selected => (@event.timezone)}, {:class => 'select2-single form-control'}
                - if @event.errors.present? and @event.errors[:timezone].present?
                  .field_with_errors
                    %span.errorMessage{:for => "event_timezone"} This field is required.  
        = f.custom_text_field :pax, "Nbr. of people"
        / %div.mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
        /   - count = f.object.event_venues.count 
        /   - val = 1
        /   .venueFields
        /     = f.fields_for :event_venues do |venue|
        /       - if val <= count or f.object.new_record?
        /         = render 'venue_fields', f: venue, val: val
        /       - val = val + 1
        /   %div.mdl-cell--12-col.mdl-cell--12-col-tablet.m-8.addnew
        /     %div.bs-component
        /       %div.form-group
        /         %label.col-lg-4.control-label.ml-color--shades-white
        /         %div.col-lg-7.addmoretext
        /           = link_to_add_fields_for_event_field '<i class= "material-icons mdl-color-text--white">add</i>'.html_safe, f, :event_venues, true, "options_form_tag_for_new field1_for_text_area link_to_add_more_option registration_field_option_3  mdl-color--light-blue-900"       
        = f.custom_text_field :google_map_link, "Google Map"
        = f.custom_text_area_field :remarks, "Remarks"
        = f.hidden_field :copy_content, :id => 'copy_content'
        = f.hidden_field :custom_content, :id => 'custom_content'
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .mdl-grid.p-v-5
            .col-lg-4.mdl-typography--text-right
              %p.displayInlineBlock.multicitytxt Event Type for Registration ? *
            .col-lg-3.p-h-12   
              - er = f.object.errors.messages[:event_type_for_registration].join(',') rescue nil
              - f.object.errors.messages[:event_type_for_registration].clear if f.object.errors.messages[:event_type_for_registration].present?
              = f.custom_radio_button_menu :event_type_for_registration, "open","Open", :id => "event_type_open", :default_checked => (f.object.event_type_for_registration == 'open') ? 'checked' : ''
              = f.custom_radio_button_menu :event_type_for_registration, "close","Close", :id => "event_type_close", :default_checked => (f.object.event_type_for_registration == 'close') ? 'checked' : ''
              .field_with_errors
                .span{:class => "errorMessage"}
                  = er

        / - if (event_names.present? and params[:action] == "new") or (event_names.present? and params[:action] == "create")
      - if @event_names.present? 
        .mdl-grid.mdl-shadow--1dp.eventFeaturesCard
          / .mdl-grid.mdl-card.mdl-shadow--1dp
          .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
            %h4.heading-border.p-t-10.m-b-15
              Copy Content
          .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.add-data
            .bs-componet
              .form-group.set_highlight_select
                %label.col-lg-4.control-label.ml-color--shades-white
                  Do you want to add data from another event?
                .col-lg-7
                  - if params[:action] == 'edit'
                    = f.custom_radio_button :copy_event, "yes","Yes", :disabled => true
                    = f.custom_radio_button :copy_event, "no", "No", :disabled => true
                  - else
                    = f.custom_radio_button :copy_event, "yes","Yes", :id => "yes"
                    = f.custom_radio_button :copy_event, "no", "No", :id => "no"
          .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.select-eventDiv
            .bs-componet
              .form-group.set_highlight_select
                %label.col-lg-4.control-label.ml-color--shades-white
                  Select Event *
                .col-lg-7
                  -# default_remarks = ['ABC','PQR','XYZ']
                  -# default_remarks << 'New Category'
                  %i.arrow.single
                  - event_name = Event.find(@event.parent_id).event_name rescue nil
                  - if event_name.present? and params[:action] == 'edit'
                    .select2-single.form-control
                      = event_name
                  - else
                    / - binding.pry
                    / - event_namess = @event_names.reject{|key, val| key == "Landing App"}
                    = f.select("event", "parent_event_id", @event_names, {:prompt => params[:action] == 'edit' ? event_name : "Select Event"}, {include_blank: 'None',:class=> 'select2-single form-control', :id => 'add_event_features'})
                    / - binding.pry
                  - if @event.errors[:parent_event_id].present?
                    .p.errorMessage
                      = 'This field is required.'
          .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.copyCustom-btnDiv
            .bs-componet
              .form-group.set_highlight_select 
                %label.col-lg-4.control-label.ml-color--shades-white
                  Do you want to copy all content from this event? *
                .col-lg-7.sdfsdfs
                  - if params[:action] == 'edit'
                    = f.custom_radio_button :copy_content_button, "yes", "Yes", :disabled => true
                    = f.custom_radio_button :copy_content_button, "no", "No, choose content to copy", :disabled => true
                  - else
                    = f.custom_radio_button :copy_content_button, "yes", "Yes", :id => "copyButton"
                    = f.custom_radio_button :copy_content_button, "no", "No, choose content to copy", :id => "customButton"
                  / %button.copyButton#copyButton{:onclick => "return false;", :style => @event.copy_content == 'true' ? 'background-color: #7b7c7c' : ''} Yes
                  / %button.customButton#customButton{:onclick => "return false;", :style => @event.custom_content == 'true' ? 'background-color: #7b7c7c' : ''} No, choose content to copy
                  - if @event.errors[:copy_content].present?
                    .p.errorMessage
                      = @event.errors[:copy_content].first
            #render_events
              = render :partial => 'admin/eventfeatures_contents/selected_events_features'
            / .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8.selectContentDiv
            /   .form-group
            /     %label.col-lg-4.control-label.ml-color--shades-white
            /       Select Content
            /     .col-lg-7.notification        
            /       - Event::MOBILE_APPLICATIONS.each_with_index do |group, index|
            /         - if index == 0
            /           .usersep
            /             Mobile Application
            /         .md-checkbox
            /           %label
            /             = check_box_tag "[associations][]", group, true, :class => "", :id => "event_user_ids_#{group}"
            /             %span.checkbox 
            /             = group.titleize
            / - Event::DATABASES.each_with_index do |group, index|
            /   - if index == 0
            /     .usersep
            /       Database
            /   .md-checkbox
            /     %label
            /       = check_box_tag "[associations][]", group, true, :class => "", :id => "event_user_ids_#{group}"
            /       %span.checkbox 
            /       = group  
            / - Event::INVITEE_STRUCTURES.each_with_index do |group, index|
            /   - if index == 0
            /     .usersep
            /       Registration
            /   .md-checkbox
            /     %label
            /       = check_box_tag "[associations][]", group, true, :class => "", :id => "event_user_ids_#{group}"
            /       %span.checkbox 
            /       = group       
            / - Event::GROUPINGS.each_with_index do |group, index|
            /   - if index == 0
            /     .usersep
            /       Communication
            /   .md-checkbox
            /     %label
            /       = check_box_tag "[associations][]", group, true, :class => "", :id => "event_user_ids_#{group}"
            /       %span.checkbox 
            /       = group                  
            / - default_group_list = @other_groups.collect{|group| [ group.name, group.id ]}
            / - default_group_list.each_with_index do |group, index|
            /   - if index == 0
            /     .usersep
            /       Groups created by you
            /   .md-checkbox
            /     %label
            /       = check_box_tag "notification[group_ids][]", group[1], (f.object.group_ids.include?(group[1].to_s)), :class => "", :id => "event_user_ids_#{group[0]}"
            /       %span.checkbox 
            /       = group[0]
        = f.hidden_field :marketing_app, :value => marketing_app if (params[:marketing_app].present? or @event.marketing_app.present?)
    - elsif false  
      .mdl-grid.mdl-card.mdl-shadow--1dp.m-t-40
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border
            Highlights / Summary Details
        = f.custom_text_area_field :description,"highlight"
        = f.custom_text_area_field :summary,"summary"
        = f.custom_file_browser_field :logo, "Listing logo ", :id => "uploadBtn"
        = f.custom_file_browser_field :inside_logo, "Screen logo ", :id => "uploadBtn1"

      .mdl-grid.mdl-card.mdl-shadow--1dp.m-t-40
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border
            Additional Information
        .mdl-cell--6-col.mdl-cell--4-col-tablet.m-8  
          .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
            = f.select("event", "theme_id", @themes.collect {|p| [ p.name, p.id ]}, {:selected => f.object.theme_id,:prompt => 'Theme Name'}, {include_blank: 'None'})
        - @default_features.each do |event_feature|
          .mdl-cell--4-col.mdl-cell--2-col-tablet.mdl-cell--1-col-phone.md-checkbox.m-8
            %label{:for => "event_user_ids_#{event_feature}"}
              = check_box_tag "event[features][]", event_feature, @present_feature.include?("#{event_feature}"), :class => "", :id => "event_user_ids_#{event_feature}"
              %span.checkbox 
              = event_feature    
    .fixed-activon-btn-new
      = f.custom_submit_button "SAVE"
      .mdl-button.mdl-js-button.mdl-button--raised.mdl-js-ripple-effect.btnsubmit.m-l-18.cancelBg
        .mdl-cell--12-col.mdl-cell--12-col-tablet.cancelbtn
          = back_button(:back)

:javascript
  $(document).on('change', '#add_event_features', function(){
    var event_name = $(this).find("option:selected").text();
    var parent_event_id = $(this).val();
    $.ajax({
      type: "GET",
      url: "/admin/clients/#{params[:client_id]}/eventfeatures_contents",
      data: {event_name, parent_event_id}
    });
  });
- if params[:action] == 'edit' or params[:action] == 'update' or @event.errors[:parent_event_id].present? or @event.errors[:copy_content].present?
  :javascript
    $('.select-eventDiv').css('display','block');
    $('.select-eventDiv').next().css('display','block');