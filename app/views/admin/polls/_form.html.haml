- if params[:import].present?
  = render :partial => 'admin/imports/form', :locals => {:@event => @event}
- else
  .save_button.mdl-card
    = form_for [:admin, @event, @poll], :html => {:class =>'form-horizontal'}, :builder => CustomFormBuilder do |f|
      .mdl-grid.mdl-card.pollInfo.mdl-shadow--1dp
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          %h4.heading-border.p-t-10.m-b-15
            General Information
        = f.custom_text_field :question, "Question *","background" => "false"
        .mdl-cell--12-col.mdl-cell--12-col-tablet.m-8
          .form-group
            %label.col-lg-4.control-label.ml-color--shades-white
              Select Option Type*
            .col-lg-7
              %i.arrow.single
              = f.select("poll", "option_type", [["Radio buttons (for single choice)","Radio"], ["Checkboxes (for multiple choice)","Checkbox"], ["Textbox","Textbox"], ['Rating (1 to 5)','Rating']], {:selected => f.object.option_type, :prompt => 'Select Option Type'}, {include_blank: 'None', :class=> 'select2-single form-control'})
              - if @poll.present? and @poll.errors.present? and @poll.errors.messages.include? :option_type
                .field_with_errors{:style => 'color:red'}
                  %span{:for => "poll_option2", :class => "errorMessage"} 
                  = "This field is required."
        .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
          .mdl-grid.p-v-5
            .col-lg-4.mdl-typography--text-right
              %p.displayInlineBlock.multicitytxt Display Results? 
            .col-lg-3.p-h-12   
              = f.custom_radio_button_menu :option_visible, "yes","Yes", :id => "url_page_type", :default_checked => (f.object.option_visible == 'yes' or f.object.option_visible.blank?) ? 'checked' : ''
              = f.custom_radio_button_menu :option_visible, "no","No", :id => "build_new_page_type", :default_checked => (f.object.option_visible == 'no') ? 'checked' : ''
        - @show_options = (f.object.option_type == "Radio" or f.object.option_type == "Checkbox") ? true : false
        - @show_rating_options = f.object.option_type == "Rating" ? true : false
        = f.custom_text_field :option1, "Option1 *","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option2, "Option2 *","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option3, "Option3","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option4, "Option4","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option5, "Option5","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option6, "Option6","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option7, "Option7","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option8, "Option8","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option9, "Option9","background" => "false", class: "poll_hide_field"
        = f.custom_text_field :option010, "Option10","background" => "false", class: "poll_hide_field"   
        = f.custom_text_field :rating_first_text, "Text for 1","background" => "false", class: "rating_hide_field"
        = f.custom_text_field :rating_second_text, "Text for 5","background" => "false", class: "rating_hide_field"   

        / .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8.p-b-5
        /   .mdl-grid.p-v-5.form-group.poll_hide_field1
        /     .col-lg-4.mdl-typography--text-right
        /       %p.displayInlineBlock.multicitytxt Text box to be shown after options?
        /     .col-lg-7.p-h-12  
        /       = f.custom_radio_button :description, true, "Yes", :id => "option-1"
        /       = f.custom_radio_button :description, false, "No", :id => "option-2"
        = hidden_field_tag "type","#{params[:type]}" if params[:type].present?
      .fixed-activon-btn-new  
        = f.custom_submit_button "SAVE"
        .mdl-button.mdl-js-button.mdl-button--raised.mdl-js-ripple-effect.btnsubmit.m-l-18.cancelBg
          .mdl-cell--12-col.mdl-cell--12-col-tablet.cancelbtn
            = back_button(:back)
:javascript
  $(window).load(function(){
    flightTime();
    minutes();
    times();  
  })
- if params[:action] == "new" and @show_options == true
  :javascript
    $('.poll_hide_field').parent().parent().show()
- elsif @show_options == false
  :javascript
    $('input.poll_hide_field').parent().parent().hide();

- if params[:action] == "new" and @show_rating_options == true
  :javascript
    $('input.rating_hide_field').parent().parent().show();
    $(".rating_hide_field").show();  
- elsif @show_rating_options == false
  :javascript
    $('input.rating_hide_field').parent().parent().hide();
    $(".rating_hide_field").hide();

:javascript
  $('input.col-lg-7.p-h-12').parent().parent().hide();
  $('#poll_option_type').on('change', function() {
    val = $(this).val();
    if(val == "Checkbox" || val == "Radio"){
      $('.poll_hide_field').parent().parent().show()
      $('input.rating_hide_field').parent().parent().hide();
    }
    if(val == "Textbox"){
      $('input.poll_hide_field').parent().parent().hide();
      $('input.rating_hide_field').parent().parent().hide();
    }
    if(val == "Rating"){
      $('input.rating_hide_field').parent().parent().show();
      $(".rating_hide_field").show();
      $('.poll_hide_field').parent().parent().hide()
    }
  });

  if ("#{params[:action]}" == "edit")
    $(window).load(function(){
      if ("#{@poll.option_type}" == "Textbox"){
        $('input.poll_hide_field').parent().parent().hide();
      } 
    }) 
      
        
