.save_button.UserList.mdl-card.mdl-shadow--1dp.p-b-20
  .mdl-cell--12-col.mdl-cell--12-col-tablet.ml-color--shades-white.m-8
    %h4.heading-border.displaybolck.p-t-10
      User
  = form_tag '/admin/users/new', :remote => true, :method => :get do
    .mdl-grid
      - if ["update"].exclude?(params[:action])
        = custom_text_field_tag_user "", "Role ", params[:role].humanize, :role_name => "roleName" rescue nil
      - if ["update","edit"].exclude?(params[:action])
        = custom_text_field_tag_user "email", "Name ", adv_search_value(params,"email"), :id => 'user_email', :class => 'user_email', :search_button => true
      = hidden_field_tag :client_id, @source.id if params[:client_id].present?
      = hidden_field_tag :event_id, @source.id if params[:event_id].present?
      - role_type = @source.class.name.singularize.downcase
      = hidden_field_tag "role_type", "#{params[:role] || @role}"
      - @url = @url || request.referer
      = hidden_field_tag :format, 'js'
      = hidden_field_tag :redirect_url, @url
      = hidden_field_tag "role", "#{params[:role] || @role}"
      = hidden_field_tag "page_id", params[:page_id] if params[:page_id].present?
      = hidden_field_tag "get_role", "#{params[:get_role]}" if params[:get_role].present?
      =# custom_button_tag_without_hide_user "Search", :id => 'user_search_form'
  .userform{:id => 'userform'}
    - if @user.errors.present? or params[:controller] == 'admin/users' and params[:action] != 'new'
      = render :partial => "admin/users/role_form", :locals => {:objs => @user, :source => @source}


:javascript
  $(window).load(function(){
      BindControls();
      $(document).on("keydown", "#user_email, #user_search", function(event){
    //$('.flyFrom').keydown(function(event){
        var newEvent = $.Event('keydown', {
            keyCode: event.keyCode
        });

        if (newEvent.keyCode !== $.ui.keyCode.TAB) {
            return;
        }

        if (newEvent.keyCode == $.ui.keyCode.TAB) {
            var liActiveCount=$('.ui-autocomplete').find('.ui-state-focus').size()
            if(liActiveCount<1){
              newEvent.keyCode = $.ui.keyCode.DOWN;
              $(this).trigger(newEvent);
              newEvent.keyCode = 13
              $(this).trigger(newEvent);
            }
        }
    });
  });

  function BindControls() {
      var Countries = JSON.parse(#{current_user.name_with_email.to_json.to_json});
      $('#user_email, #user_search').autocomplete({
        source: Countries,
        minLength: 0,
        scroll: true
        }).focus(function() {
          $(this).autocomplete("search", "");
        });
    }

